# Tasks for the Molecule verify stage: Check collection role "run" outcomes.

- name: "Molecule | Verify | Initialize the foundata.sshd.run role (without actually running it; get and expose variables)"
  ansible.builtin.include_role:
    name: "foundata.sshd.run"
    tasks_from: "init"
    public: true


- name: "Molecule | Verify | Gather service facts"
  ansible.builtin.service_facts:


- name: "Molecule | Verify | Show service facts"
  ansible.builtin.debug:
    var: ansible_facts['services']
    verbosity: 3


- name: "Molecule | Verify | Assert SSH service is running"
  ansible.builtin.assert:
    that:
      - ansible_facts['services'][__run_sshd_servicename] is defined
      - ansible_facts['services'][__run_sshd_servicename].state == 'running'
    fail_msg: "SSH service '{{ __run_sshd_servicename }}' is not running"
    success_msg: "SSH service '{{ __run_sshd_servicename }}' is running"


- name: "Molecule | Verify | Extract configured SSH port"
  ansible.builtin.set_fact:
    __testing_configured_ssh_port: >-
      {{
        __run_sshd_merged_sshd_settings.Port | default(22) | int
        if (__run_sshd_merged_sshd_settings is defined and
            __run_sshd_merged_sshd_settings.Port is defined)
        else 22
      }}


- name: "Molecule | Verify | Display configured SSH port"
  ansible.builtin.debug:
    var: __testing_configured_ssh_port
    verbosity: 1


- name: "Molecule | Verify | Run ssh-audit against localhost on configured port"
  ansible.builtin.shell: |-
    ssh-audit localhost:{{ __testing_configured_ssh_port }} -jj > /tmp/ssh-audit-result.json
  args:
    executable: "/bin/bash"
  register: __testing_ssh_audit_run
  changed_when:
    - __testing_ssh_audit_run['rc'] != 1
  failed_when:
    - __testing_ssh_audit_run['rc'] == 1 # other exit codes >0 are reporting SSH config errors


- name: "Molecule | Verify | Read ssh-audit JSON results"
  ansible.builtin.slurp:
    src: "/tmp/ssh-audit-result.json"
  when:
    - __testing_ssh_audit_run is defined
    - __testing_ssh_audit_run['rc'] is defined
  register: __testing_ssh_audit_json_encoded


- name: "Molecule | Verify | Parse ssh-audit results"
  ansible.builtin.set_fact:
    __testing_ssh_audit_results: "{{ __testing_ssh_audit_json_encoded['content'] | b64decode | from_json }}"
  when:
    - __testing_ssh_audit_json_encoded is defined
    - __testing_ssh_audit_json_encoded['content'] is defined


- name: "Molecule | Verify | Check for CVEs or warnings and failures in recommendations"
  ansible.builtin.set_fact:
    __testing_ssh_audit_cves: "{{ __testing_ssh_audit_results['cves'] | default({}) | length > 0 }}"
    __testing_ssh_audit_warnings: "{{ __testing_ssh_audit_results['recommendations']['warning'] | default({}) | length > 0 }}"
    __testing_ssh_audit_failures: "{{ __testing_ssh_audit_results['recommendations']['critical'] | default({}) | length > 0 }}"
  when:
    - __testing_ssh_audit_results is defined
    - __testing_ssh_audit_results['recommendations'] is defined


- name: "Molecule | Verify | Assert SSH configuration is secure"
  ansible.builtin.assert:
    that:
      - __testing_ssh_audit_run is defined
      - __testing_ssh_audit_run['rc'] is defined
      - not __testing_ssh_audit_cves
      - not __testing_ssh_audit_warnings
      - not __testing_ssh_audit_failures
    fail_msg: "ssh-audit detected issues (CVE, warning or failure) or failed to run. Please check /tmp/ssh-audit-result.json for details."
    success_msg: "ssh-audit verified SSH configuration with no issues."
